name: CI/CD Pipeline for Flask and React

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]  # Node version updated to be compatible with your dependencies
        python-version: [3.8]  # Python version

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        pip install -r flask-backend/requirements.txt

    - name: Test Flask application
      run: |
        echo "Running Flask tests..."

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Node dependencies and build React app
      run: |
        cd react-frontend
        npm install
        npm run build
      id: build  # Added an ID for referring to the build step

    - name: Check build directory exists
      run: |
        if [ -d react-frontend/build ]; then
          echo "build-dir-exists=true" >> $GITHUB_ENV
        else
          echo "build-dir-exists=false" >> $GITHUB_ENV
        fi

    - name: Debug build-dir-exists value
      run: | 
       echo "Build directory exists: ${{ env.build-dir-exists }}"
      
    
    - name: Deploy React frontend to AWS EC2
      uses: easingthemes/ssh-deploy@v2.1.5
      if: env.build-dir-exists == 'true'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SOURCE: "react-frontend/build/"
        TARGET: "/var/www/html/react-frontend"

    - name: Deploy Flask backend to AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/html
          sudo git pull origin main
          sudo pip install -r flask-backend/requirements.txt
          sudo systemctl restart flask.service

    - name: Clean up post-deployment
      run: |
        echo "Deployment completed successfully."
